name: Build
on:
  push:
    branches:
      - feature/github-actions

env:
  CARGO_TERM_COLOR: always

jobs:
  get-info:
    name: Get Info about stuff
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.name.outputs.name }}
      version: ${{ steps.version.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get version
        id: version
        run: echo "::set-output name=version::$(grep '^version =' Cargo.toml | sed 's/version = "\(.*\)"/\1/' | head -1)"

      - name: Get name
        id: name
        run: echo "::set-output name=name::$(grep '^name =' Cargo.toml | sed 's/name = "\(.*\)"/\1/' | head -1)"

      - name: Get changelog
        id: changelog
        run: |
          latest_tag=`git describe --tags --abbrev=0 2>/dev/null || echo HEAD`
          changelog=`git log --oneline $latest_tag`
          echo "::set-output name=changelog::$changelog"
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run tests
      run: cargo test --verbose
  build:
    strategy:
        fail-fast: false
        target:
            windows
            macos
            linux
    runs-on: ${{ matrix.target == 'linux' && 'ubuntu' || matrix.target }}-latest
    name: Build for ${{ matrix.target }}
    needs: get-info
    steps:
    - uses: actions/checkout@v4
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Build 
      run: cargo build --verbose --release
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ needs.get-info.outputs.name }}-${{ matrix.target }}
        path: target/release
